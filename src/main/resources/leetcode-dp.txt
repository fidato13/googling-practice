Imp Links:
==========
https://leetcode.com/problems/target-sum/discuss/455024/DP-IS-EASY!-5-Steps-to-Think-Through-DP-Questions.
https://leetcode.com/discuss/general-discussion/662866/dp-for-beginners-problems-patterns-sample-solutions
https://leetcode.com/discuss/general-discussion/665604/important-and-useful-links-from-all-over-the-leetcode
https://leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns

Questions Specific Imp Links:
=============================
(***Matrix Block sum / Range Prefix Pattern***) - [https://leetcode.com/problems/matrix-block-sum/discuss/620405/Easy-Prefix-Logic-Explanation-with-Matrix-Example-%3A-Python-Soution]
(***Target Sum***) - [https://leetcode.com/problems/target-sum/discuss/97334/Java-(15-ms)-C%2B%2B-(3-ms)-O(ns)-iterative-DP-solution-using-subset-sum-with-explanation]

Problems Solved:
===================

Longest Increasing Subsequence Pattern:
--------------------------------------
1. Longest Increasing Subsequence - [https://leetcode.com/problems/longest-increasing-subsequence/]
2. Maximum Length of Pair Chain - [https://leetcode.com/problems/maximum-length-of-pair-chain/]
3. Number of Longest Increasing Subsequence - [https://leetcode.com/problems/number-of-longest-increasing-subsequence/]
4. Largest Divisible Subset - [https://leetcode.com/problems/largest-divisible-subset/]
5. Longest String Chain - [https://leetcode.com/problems/longest-string-chain/]
6. Russian Doll Envelopes - [https://leetcode.com/problems/russian-doll-envelopes/]
7. Longest Arithmetic Sequence - [https://leetcode.com/problems/longest-arithmetic-sequence/]

Longest Common Subsequence Pattern:
-----------------------------------
1. Delete Operation for Two Strings - [https://leetcode.com/problems/delete-operation-for-two-strings/]
2. Distinct Subsequences - [https://leetcode.com/problems/distinct-subsequences/]

MCM Pattern:
------------
1. Palindromic Substrings - [https://leetcode.com/problems/palindromic-substrings/]
2. Minimum Score Triangulation of Polygon - [https://leetcode.com/problems/minimum-score-triangulation-of-polygon/]
3. Minimum Cost Tree From Leaf Values - [https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/]
4. Burst Balloons - [https://leetcode.com/problems/burst-balloons/]


0/1 Knapsack Pattern:
---------------------
1. Partition Equal Subset Sum - [https://leetcode.com/problems/partition-equal-subset-sum/]
2. Last Stone Weight II - [https://leetcode.com/problems/last-stone-weight-ii/] ***exactly like "Min Subset sum diff"***

Unbounded Knapsack Pattern:
---------------------------
1. Coin Change - [https://leetcode.com/problems/coin-change/]
2. Coin Change 2 - [https://leetcode.com/problems/coin-change-2/]
3. Perfect Squares - [https://leetcode.com/problems/perfect-squares/]


Matrix Block sum (Range Prefix) Pattern:
---------------------------------------
1. Matrix Block Sum - [https://leetcode.com/problems/matrix-block-sum/]
2. Range Sum Query 2D Immutable - [https://leetcode.com/problems/range-sum-query-2d-immutable/]
3. Triangle - [https://leetcode.com/problems/triangle/]
4. Maximal Square - [https://leetcode.com/problems/maximal-square/]
5. Minimum Falling Path Sum - [https://leetcode.com/problems/minimum-falling-path-sum/]

Unknown Pattern:
----------------
1. Delete and Earn - [https://leetcode.com/problems/delete-and-earn/] ... somewhat felt like 0/1 knapsack
2. House Robber - [https://leetcode.com/problems/house-robber/] .. somewhat felt like 0/1 knapsack
3. Partition to K Equal Sum Subsets - [https://leetcode.com/problems/partition-to-k-equal-sum-subsets/] .. more like a backtracking , as well as in MCM theme where we try almost every thing
4. Combination Sum IV - [https://leetcode.com/problems/combination-sum-iv/]
5. Minimum Cost For Tickets - [https://leetcode.com/problems/minimum-cost-for-tickets/] ***INTERESTING_ONE***
6. Dungeon Game - [https://leetcode.com/problems/dungeon-game/]
7. Target Sum - [https://leetcode.com/problems/target-sum/] ***Beautiful Solution approach for dp in the official solution page, it shows first the recursive approach, then memoize it, Ideally how a dp solution should be done!, revise it again*** ... It looks like a 0/1 knapsack type...i.e. subset sum problem .. see this [https://leetcode.com/problems/target-sum/discuss/97334/Java-(15-ms)-C%2B%2B-(3-ms)-O(ns)-iterative-DP-solution-using-subset-sum-with-explanation]
